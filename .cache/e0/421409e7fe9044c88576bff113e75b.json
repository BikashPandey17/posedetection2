{"id":"node_modules/@tensorflow/tfjs-layers/dist/backend/common.js","dependencies":[{"name":"E:\\posedetection2\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\common.js.map","includedInParent":true,"mtime":1570197468088},{"name":"E:\\posedetection2\\node_modules\\@tensorflow\\tfjs-layers\\src\\backend\\common.ts","includedInParent":true,"mtime":1570197468088},{"name":"E:\\posedetection2\\package.json","includedInParent":true,"mtime":1570198674291},{"name":"E:\\posedetection2\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1570197468088},{"name":"@tensorflow/tfjs-core","loc":{"line":12,"column":26},"parent":"E:\\posedetection2\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\common.js","resolved":"E:\\posedetection2\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar _epsilon;\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\nfunction epsilon() {\n    if (_epsilon == null) {\n        _epsilon = tfjs_core_1.backend().epsilon();\n    }\n    return _epsilon;\n}\nexports.epsilon = epsilon;\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\nfunction setEpsilon(e) {\n    _epsilon = e;\n}\nexports.setEpsilon = setEpsilon;\n/**\n * Returns the default image data format convention.\n */\nfunction imageDataFormat() {\n    return 'channelsLast';\n}\nexports.imageDataFormat = imageDataFormat;\n","map":{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/backend/common.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;AAEH,mDAA8C;AAG9C,IAAI,QAAgB,CAAC;AAErB;;GAEG;AACH,SAAgB,OAAO;IACrB,IAAI,QAAQ,IAAI,IAAI,EAAE;QACpB,QAAQ,GAAG,mBAAO,EAAE,CAAC,OAAO,EAAE,CAAC;KAChC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AALD,0BAKC;AAED;;;GAGG;AACH,SAAgB,UAAU,CAAC,CAAS;IAClC,QAAQ,GAAG,CAAC,CAAC;AACf,CAAC;AAFD,gCAEC;AAED;;GAEG;AACH,SAAgB,eAAe;IAC7B,OAAO,cAAc,CAAC;AACxB,CAAC;AAFD,0CAEC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {backend} from '@tensorflow/tfjs-core';\nimport {DataFormat} from '../keras_format/common';\n\nlet _epsilon: number;\n\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\nexport function epsilon() {\n  if (_epsilon == null) {\n    _epsilon = backend().epsilon();\n  }\n  return _epsilon;\n}\n\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\nexport function setEpsilon(e: number) {\n  _epsilon = e;\n}\n\n/**\n * Returns the default image data format convention.\n */\nexport function imageDataFormat(): DataFormat {\n  return 'channelsLast';\n}\n"]}},"hash":"7f7386ed4299992068a7d92a124d975b","cacheData":{"env":{}}}